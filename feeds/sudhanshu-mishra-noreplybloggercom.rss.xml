<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Shortlog</title><link>http://www.sudhanshumishra.in/</link><description></description><atom:link href="http://www.sudhanshumishra.in/feeds/sudhanshu-mishra-noreplybloggercom.rss.xml" rel="self"></atom:link><lastBuildDate>Wed, 07 Jan 2015 16:51:00 +0530</lastBuildDate><item><title>Top Hacker News Archive</title><link>http://www.sudhanshumishra.in/top-hacker-news-archive</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
[Hacker News'](https://news.ycombinator.com/) top 5 entries are some
beautiful stories that can't be missed by a technology enthusiast. The
problem is HN gives more weight-age to the period of existence of a post
and hence articles decay rapidly as time passes. I try my best to read
most of them but it's certainly not possible if you've got other things
to do. :)

To overcome this problem I wrote a small script to pull all those
entries and save it for me even when I'm away. Perhaps this will help my
obsession with hacker news.  

Once I have enough articles, I'll host them on the web with real time
addition of new articles for everyone. I'll think about other good
sources too.

&lt;/div&gt;

&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Wed, 07 Jan 2015 16:51:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2015-01-07:top-hacker-news-archive</guid><category>python</category><category>Web</category></item><item><title>GSoC'14 progress: Week 12</title><link>http://www.sudhanshumishra.in/gsoc14-progress-week-12</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;

&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Last week I worked on utility functions which has been merged into the
master.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Currently I am working on converting my incopmlete PR related to
geometrical optics in 3D into 2D. Creating these classes in 3D will make
it difficult to use/extend. I referred to some books and I never saw use
of too much 3D in their illustrations. Depending on the use cases we can
consider adding it later after gsoc. As of now optics module can not be
called complete and hence I'll be working on it post gsoc.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Few other things which I would like to complete this week are as
follows:

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Interference&lt;/li&gt;
&lt;li&gt;Diffraction&lt;/li&gt;
&lt;li&gt;IPython notebooks for examples&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Mon, 11 Aug 2014 11:27:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2014-08-11:gsoc14-progress-week-12</guid><category>gsoc</category><category>sympy</category></item><item><title>GSoC'14 Week 10: Adding more to utils</title><link>http://www.sudhanshumishra.in/gsoc14-week-10-adding-more-to-utils</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
This week I worked on adding more utility function in optics. Some of
them are yet to be added. I'll send a pull request once I write tests
for them.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Here's the link to the code pushed till now:

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
&lt;https://github.com/debugger22/sympy/compare/util-funcs&gt;

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
I also worked on one of my pending
PR(&lt;https://github.com/sympy/sympy/pull/7686&gt;) parameterizing a 3D
circle. This will make the implementation a bit easier.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Tomorrow I'll be going back to college.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
That's all for now. Cheers!

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Mon, 28 Jul 2014 09:05:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2014-07-28:gsoc14-week-10-adding-more-to-utils</guid><category>gsoc</category><category>sympy</category></item><item><title>GSoC'14 Progress: Finished refraction at planar surface</title><link>http://www.sudhanshumishra.in/gsoc14-progress-finished-refraction-at-planar-surface</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
I'm sorry for this delayed post. I couldn't work last week due to some
other issues so had nothing much to report.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
This week I completed refraction function for planar surface, fixed some
bugs and wrote tests for it. I also added a function to calculate angle
of deviation. Details can be found on the following link

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
&lt;https://github.com/sympy/sympy/pull/7626&gt;

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
I'm waiting for Sean to start reviewing this.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
My next priority is to complete a pending PR on mirrors.

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Sun, 20 Jul 2014 14:32:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2014-07-20:gsoc14-progress-finished-refraction-at-planar-surface</guid><category>gsoc</category><category>sympy</category></item><item><title>GSoC'14 Progress: Working with geometry</title><link>http://www.sudhanshumishra.in/gsoc14-progress-working-with-geometry</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div class="markdown-body"&gt;
&lt;div style="color: #162029; font-family: 'Open Sans', 'Trebuchet MS', Helvetica, sans-serif; font-size: 14px; line-height: 20px; margin-bottom: 15px;"&gt;
&lt;span style="background-color: white;"&gt;This week I
completed `refraction_angle`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"}.
Now it also works
with `Ray3D`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"} and `Plane`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"}.
This function calculates transmitted vector after
refraction. `medium1`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"} and `medium2`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"} can
be `Medium`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"}or
any sympifiable object.
If`incident`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"} is
an object
of `Ray3D`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"}, `normal`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"} also
has to be an instance
of `Ray3D`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"} in
order to get the output as
a `Ray3D`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"}.
If plane of separation is not provided and normal is an instance
of `Ray3D`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"},
normal will be assumed to be intersecting incident ray at the plane of
separation. This will not be the case
when `normal`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"} is
a `Matrix`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"} or
any other sequence.   
If `incident`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"} is
an instance
of `Ray3D`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"} and `plane`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"} has
not been provided
and `normal`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"} is
not`Ray3D`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"},
output will be
a `Matrix`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"}.
It is dependent
on `Plane`{style="border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; font-family: Menlo, Consolas, 'Courier New', monospace; font-size: 12px !important; padding: 2px 4px; white-space: nowrap;"} so
I haven’t added tests for it.&lt;/span&gt;

&lt;/div&gt;

&lt;div style="color: #162029; font-family: 'Open Sans', 'Trebuchet MS', Helvetica, sans-serif; font-size: 14px; line-height: 20px; margin-bottom: 15px;"&gt;
&lt;span style="background-color: white;"&gt;Here’s the link to the
PR &lt;https://github.com/sympy/sympy/pull/7626&gt;&lt;/span&gt;

&lt;/div&gt;

&lt;div style="color: #162029; font-family: 'Open Sans', 'Trebuchet MS', Helvetica, sans-serif; font-size: 14px; line-height: 20px; margin-bottom: 15px;"&gt;
&lt;span style="background-color: white;"&gt;This week I also worked on making
spherical mirrors in SymPy. There are few issues that I am facing.
Currently I’m working(stuck) on locating mirrors in space. It’s an
amalgamation of 2D and 3D geometry. I still have to subclass Ray of
geometry and make it useful for this. I’ve sent a [WIP
PR](https://github.com/sympy/sympy/pull/7686).&lt;/span&gt;

&lt;/div&gt;

&lt;div style="color: #162029; font-family: 'Open Sans', 'Trebuchet MS', Helvetica, sans-serif; font-size: 14px; line-height: 20px; margin-bottom: 15px;"&gt;
&lt;span style="background-color: white;"&gt;I’m waiting for Sean to
merge [this](https://github.com/sympy/sympy/pull/7607) long waited PR
for moving Gaussian optics module.&lt;/span&gt;

&lt;/div&gt;

&lt;div style="color: #162029; font-family: 'Open Sans', 'Trebuchet MS', Helvetica, sans-serif; font-size: 14px; line-height: 20px; margin-bottom: 15px;"&gt;
That's all for now.

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Tue, 08 Jul 2014 17:24:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2014-07-08:gsoc14-progress-working-with-geometry</guid><category>gsoc</category><category>physics</category><category>sympy</category></item><item><title>GSoC'14 progress: Week 6</title><link>http://www.sudhanshumishra.in/gsoc14-progress-week-6</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
It was a busy week though I managed to do some work.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
I've been working on following things:

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Integrating &lt;code style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"&gt;TWave&lt;/code&gt; with &lt;code style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"&gt;refraction_angle&lt;/code&gt;(&lt;a href="https://github.com/sympy/sympy/pull/7626"&gt;7626&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Interference class&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Some blocking 3D geometry code got merged yesterday which gives me a lot
of new things to work on. :-)

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
I also tried to take a look on very
old [patch](https://github.com/sympy/sympy/pull/1226) for `gaussopt`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"}.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
This week I wrote a script to update the development documentation when
a PR gets merged into the master. This is up and running.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
I passed mid term evaluation that took place last week and I would like
to
thank [Sean](https://github.com/flacjacket), [Ondrej](https://github.com/certik),[Aaron](https://github.com/asmeurer) and [Chris](https://github.com/smichr) for
their constant support.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
That's all for now. *Cheers!*

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Wed, 02 Jul 2014 03:27:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2014-07-02:gsoc14-progress-week-6</guid><category>gsoc</category><category>physics</category><category>sympy</category></item><item><title>GSoC'14 progress, Week 5</title><link>http://www.sudhanshumishra.in/gsoc14-progress-week-5</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div style="font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
I did good amount of work this week. I sent a small part of it related
to ray tracing for review.

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sympy/sympy/pull/7626"&gt;https://github.com/sympy/sympy/pull/7626&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
I got some great suggestions from Sean to make it compatible directly
with&lt;span style="color: #444444;"&gt; &lt;/span&gt;`TWave`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"}&lt;span style="color: #444444;"&gt; &lt;/span&gt;class.
It is a WIP as I'm waiting for few 3D geometry classes. I'm also working
on inteference of light waves and I hope that I'll send it for review in
next couple of days. My last PR on medium is still unmerged and I really
need it to be in master to work on more implementations.

&lt;/div&gt;

&lt;div style="font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
I'm also trying to
move&lt;span style="color: #444444;"&gt; &lt;/span&gt;`physics/gaussopt`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"}&lt;span style="color: #444444;"&gt; &lt;/span&gt;to&lt;span style="color: #444444;"&gt; &lt;/span&gt;`physics/optics/gaussopt`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"}&lt;span style="color: #444444;"&gt; &lt;/span&gt;as
it'll be good to keep things related to optics at the same place. I'm
waiting for opinion of the community about it. Here's the link to that
PR:

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sympy/sympy/pull/7607"&gt;https://github.com/sympy/sympy/pull/7607&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Here is some other minor work that I've done this week outside of
optics:

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sympy/sympy/pull/7609"&gt;https://github.com/sympy/sympy/pull/7609&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sympy/sympy/pull/7610"&gt;https://github.com/sympy/sympy/pull/7610&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sympy/sympy/pull/7612"&gt;https://github.com/sympy/sympy/pull/7612&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sympy/sympy/pull/7614"&gt;https://github.com/sympy/sympy/pull/7614&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sympy/sympy/pull/7627"&gt;https://github.com/sympy/sympy/pull/7627&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sympy/sympy/pull/7628"&gt;https://github.com/sympy/sympy/pull/7628&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sympy/sympy/pull/7629"&gt;https://github.com/sympy/sympy/pull/7629&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
That's all for now. *Cheers!*

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Mon, 23 Jun 2014 17:59:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2014-06-23:gsoc14-progress-week-5</guid><category>gsoc</category><category>physics</category><category>sympy</category></item><item><title>GSoC'14 progress, week 4: finished medium, working on Fermat's principle and Snell's law</title><link>http://www.sudhanshumishra.in/gsoc14-progress-week-4-finished-medium-working-on-fermats-principle-and-snells-law</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
It was a great week! My last to last PR, on
enhancing `TWave`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"},
got merged! I have also
finished`Medium`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"} and
waiting for Sean's comments on it. Here's the link to that PR:

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
&lt;https://github.com/sympy/sympy/pull/7580&gt;

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
I still have a *todo* in the tests:

&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;m5 = Medium(&amp;#39;m5&amp;#39;, permittivity=710*10**(-12)*s**4*A**2/(m**3*kg), n=1.33)assert simplify(m5.intrinsic_impedance - 6.24845417765552*kg*m**2/(A**2*s**3)) == 0# XXX: This is supposed to be zero but it turns out to be# very close to zero and not zero.# assert simplify(m5.speed - 225407863.157895*m/s) == 0
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
This `m5.speed`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"} is
equal
to `225407863.157895*m/s`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"} (or
maybe very close to it) but, assertion results in a failure.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Similarly in the constructor of
the `Medium`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"} inconsistency
comes due to slight difference in floating point parameters(permittivity
and permeability). I've commented out this part of my code. Maybe Sean
will suggest a better way to do it.

&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;# XXX: There&amp;#39;s issue with precision. Values may be# different slightly.if permittivity != u0 and permittivity != e0:    if n != c*sqrt(permittivity*permeability):        raise ValueError(&amp;quot;Values are not consistent.&amp;quot;)
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
As soon as it gets merged, I'll make necessary changes in Fermat's
principle and Snell's law part of the code and send a PR to review.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Now I realize that the next two weeks are not going to be a joy ride for
me. I must finish major part of geometrical optics as written in my
proposal.

That's all for now. Cheers!

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Mon, 16 Jun 2014 19:32:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2014-06-16:gsoc14-progress-week-4-finished-medium-working-on-fermats-principle-and-snells-law</guid><category>gsoc</category><category>physics</category><category>sympy</category></item><item><title>GSoC'14: Third week</title><link>http://www.sudhanshumishra.in/gsoc14-third-week</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
It was another not so productive week but I learnt a lot regarding how
to write new classes by extending classes
like `Basic`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"}, `Symbol`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"} and `Expr`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"}.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Last week I got stuck with the rewrite expression mechanism which turned
out to be a bug in
the `core`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"}.
Thanks to [Sean](https://github.com/flacjacket) for the fix! I need to
do some more cleanup to get my last PR merged.

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sympy/sympy/pull/7546"&gt;https://github.com/sympy/sympy/pull/7546&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;
&lt;span style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px;"&gt;I
also tried to fix an issue related to assumptions
in &lt;/span&gt;`Function`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; line-height: 18px; padding: 3px 4px;"}&lt;span style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px;"&gt; but
the complex behaviour
of &lt;/span&gt;`__new__`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; line-height: 18px; padding: 3px 4px;"}&lt;span style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px;"&gt; constructor
makes it difficult to follow the inheritance. I also need to understand
the working of SymPy's
 &lt;/span&gt;`@cacheit`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; line-height: 18px; padding: 3px 4px;"}&lt;span style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px;"&gt; 
decorator.&lt;/span&gt;

&lt;/div&gt;

&lt;div&gt;
&lt;span style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px;"&gt;  
&lt;/span&gt;

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Lately I've been working on the implementation of optical medium. The
motivation behind defining
a`Medium`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"} came
from the laziness of passing constants like electric permittivity and
magnetic permeabhility of the medium everywhere. It will help carry out
operations(events) very easily in optics.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
With the merger
of `Point3D`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"} by [Akshay](https://github.com/akshayah3) I
planned to implement Fermat's principle and thus felt the need
of `Medium`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"} first.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
I've already sent a WIP pull request
for `Medium`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"}.
Here's the link:

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sympy/sympy/pull/7580"&gt;https://github.com/sympy/sympy/pull/7580&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
I also took a quick glance at variational calculus to solve the problem
involving Fermat's principle. I'm planning to start this as following:

&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;FermatsPrinciple&lt;/span&gt;(&lt;span class="n"&gt;Expr&lt;/span&gt;):    &lt;span class="n"&gt;def&lt;/span&gt; &lt;span class="n"&gt;__init__&lt;/span&gt;(&lt;span class="k"&gt;self&lt;/span&gt;, &lt;span class="n"&gt;p1&lt;/span&gt;, &lt;span class="n"&gt;p2&lt;/span&gt;, &lt;span class="n"&gt;v&lt;/span&gt;=&lt;span class="n"&gt;Symbol&lt;/span&gt;(&lt;span class="s"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;)):        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;isinstance&lt;/span&gt;(&lt;span class="n"&gt;p1&lt;/span&gt;, &lt;span class="n"&gt;type&lt;/span&gt;(())) &lt;span class="o"&gt;and&lt;/span&gt; &lt;span class="n"&gt;isinstance&lt;/span&gt;(&lt;span class="n"&gt;p2&lt;/span&gt;, &lt;span class="n"&gt;type&lt;/span&gt;(())):            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;(&lt;span class="n"&gt;p1&lt;/span&gt;) == &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;and&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;(&lt;span class="n"&gt;p2&lt;/span&gt;) == &lt;span class="mi"&gt;2&lt;/span&gt;:                &lt;span class="k"&gt;self&lt;/span&gt;.&lt;span class="n"&gt;p1&lt;/span&gt; = &lt;span class="n"&gt;Point&lt;/span&gt;(*&lt;span class="n"&gt;p1&lt;/span&gt;)                &lt;span class="k"&gt;self&lt;/span&gt;.&lt;span class="n"&gt;p2&lt;/span&gt; = &lt;span class="n"&gt;Point&lt;/span&gt;(*&lt;span class="n"&gt;p2&lt;/span&gt;)            &lt;span class="n"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;(&lt;span class="n"&gt;p1&lt;/span&gt;) == &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;and&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;(&lt;span class="n"&gt;p2&lt;/span&gt;) == &lt;span class="mi"&gt;3&lt;/span&gt;:                &lt;span class="k"&gt;self&lt;/span&gt;.&lt;span class="n"&gt;p1&lt;/span&gt; = &lt;span class="n"&gt;Point3D&lt;/span&gt;(*&lt;span class="n"&gt;p1&lt;/span&gt;)                &lt;span class="k"&gt;self&lt;/span&gt;.&lt;span class="n"&gt;p2&lt;/span&gt; = &lt;span class="n"&gt;Point3D&lt;/span&gt;(*&lt;span class="n"&gt;p2&lt;/span&gt;)        &lt;span class="n"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;isinstance&lt;/span&gt;(&lt;span class="n"&gt;p1&lt;/span&gt;, &lt;span class="n"&gt;Point&lt;/span&gt;) &lt;span class="o"&gt;and&lt;/span&gt; &lt;span class="n"&gt;isinstance&lt;/span&gt;(&lt;span class="n"&gt;p2&lt;/span&gt;, &lt;span class="n"&gt;Point&lt;/span&gt;):            &lt;span class="k"&gt;self&lt;/span&gt;.&lt;span class="n"&gt;p1&lt;/span&gt; = &lt;span class="n"&gt;Point3D&lt;/span&gt;(&lt;span class="n"&gt;p1&lt;/span&gt;.&lt;span class="o"&gt;x&lt;/span&gt;, &lt;span class="n"&gt;p1&lt;/span&gt;.&lt;span class="n"&gt;y&lt;/span&gt;, &lt;span class="mi"&gt;0&lt;/span&gt;)            &lt;span class="k"&gt;self&lt;/span&gt;.&lt;span class="n"&gt;p2&lt;/span&gt; = &lt;span class="n"&gt;Point3D&lt;/span&gt;(&lt;span class="n"&gt;p2&lt;/span&gt;.&lt;span class="o"&gt;x&lt;/span&gt;, &lt;span class="n"&gt;p2&lt;/span&gt;.&lt;span class="n"&gt;y&lt;/span&gt;, &lt;span class="mi"&gt;0&lt;/span&gt;)        &lt;span class="n"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;isinstance&lt;/span&gt;(&lt;span class="n"&gt;p1&lt;/span&gt;, &lt;span class="n"&gt;Point3D&lt;/span&gt;) &lt;span class="o"&gt;and&lt;/span&gt; &lt;span class="n"&gt;isinstance&lt;/span&gt;(&lt;span class="n"&gt;p2&lt;/span&gt;, &lt;span class="n"&gt;Point3D&lt;/span&gt;):            &lt;span class="k"&gt;self&lt;/span&gt;.&lt;span class="n"&gt;p1&lt;/span&gt; = &lt;span class="n"&gt;p1&lt;/span&gt;            &lt;span class="k"&gt;self&lt;/span&gt;.&lt;span class="n"&gt;p2&lt;/span&gt; = &lt;span class="n"&gt;p2&lt;/span&gt;        &lt;span class="n"&gt;else:&lt;/span&gt;            &lt;span class="n"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;TypeError&lt;/span&gt;(&lt;span class="s"&gt;&amp;quot;p1 and p2 can only be tuple, Point or Point3D&amp;quot;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
It's not a very good API and needs more refining which I'll discuss with
Sean once I get it working.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
My work in this week(*fourth week as I am writing this post very late*)
will be to complete the above discussed things.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
On a lighter note, the temperature here is 46 degrees and no sign of
rains yet. :(

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
*That's all for now. Cheers!*

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
If you have some feedback or questions regarding this post, please add
comments. I would be happy to get some feedback.

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Tue, 10 Jun 2014 10:08:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2014-06-10:gsoc14-third-week</guid><category>gsoc</category><category>physics</category><category>sympy</category></item><item><title>GSoC'14 Progress: Finishing TWave</title><link>http://www.sudhanshumishra.in/gsoc14-progress-finishing-twave</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div style="margin-bottom: 9px;"&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
This last week most of the coding I did was only related to transverse
wave. It has already been merged into the master.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
&lt;https://github.com/sympy/sympy/pull/7518&gt;

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Here is the class structure of
the `TWave`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"}:

&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;Inherits========ExprArguments=========amplitude : Sympifyable    Amplitude of the wave.frequency : Sympifyable    Frequency of the wave.phase : Sympifyable    Phase angle of the wave.time_period : Sympifyable    Time period of the wave.n : Sympifyable    Refractive index of the medium.Raises=======ValueError : When niether frequency nor time period is provided.    or they are not consistent.TypeError : When anyting other than TWave objects is added.Methods=======frequencytime_periodwavelengthamplitudephasespeedangular_velocitywavenumber
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Till now it has been very easy to implement this but these days I'm
stuck on writing functions to rewrite an expression using different
functions. This is supposed to work like this as I feel from the code:

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
When you
call `expr.rewrite('sin')`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"},
the following code written
in `sympy.core.basic`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"}should
make a call to
function `_eval_rewrite_as_sin(self, *args)`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"} defined
in the object class.

&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="o"&gt;not&lt;/span&gt; &lt;span class="nn"&gt;args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="s-Atom"&gt;return&lt;/span&gt; &lt;span class="nn"&gt;selfelse&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="s-Atom"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[:-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="nf"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s-Atom"&gt;string_types&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;        &lt;span class="s-Atom"&gt;rule&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;&amp;#39;_eval_rewrite_as_&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s-Atom"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="nn"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="s-Atom"&gt;rule&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;&amp;#39;_eval_rewrite_as_&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s-Atom"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="k"&gt;__&lt;/span&gt;&lt;span class="s-Atom"&gt;name__&lt;/span&gt;    &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="o"&gt;not&lt;/span&gt; &lt;span class="nn"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="s-Atom"&gt;return&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="nf"&gt;eval_rewrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;rule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;**hints&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="nn"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="nf"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="s-Atom"&gt;:&lt;/span&gt;            &lt;span class="s-Atom"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;        &lt;span class="s-Atom"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s-Atom"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;__&lt;/span&gt;&lt;span class="s-Atom"&gt;class__&lt;/span&gt; &lt;span class="s-Atom"&gt;for&lt;/span&gt; &lt;span class="s-Atom"&gt;p&lt;/span&gt; &lt;span class="s-Atom"&gt;in&lt;/span&gt; &lt;span class="s-Atom"&gt;pattern&lt;/span&gt; &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;        &lt;span class="s-Atom"&gt;if&lt;/span&gt; &lt;span class="nn"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;            &lt;span class="s-Atom"&gt;return&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;_&lt;/span&gt;&lt;span class="nf"&gt;eval_rewrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;tuple&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s-Atom"&gt;rule&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;**hints&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="nn"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;            &lt;span class="s-Atom"&gt;return&lt;/span&gt; &lt;span class="s-Atom"&gt;self&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
But this is not the case with me. It always ends up
calling `__str__`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"} method.
This is the PR for the same.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
&lt;https://github.com/sympy/sympy/pull/7546&gt;

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
By the way, I had never used any debugger for Python before and now I
feel it makes your life much easier. [Winpdb](http://winpdb.org/) is a
great Python debugger which is platform independent.

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
I've also been working on SHM and will submit a PR soon for that.
Besides my project, I also closed two issues this week related to
printing
in `sympy.logic`{style="background-color: #f7f7f9; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(225, 225, 232); color: #dd1144; font-family: Consolas, 'Liberation Mono', Courier, monospace !important; font-size: 12px; padding: 3px 4px;"} and
helped to review few PRs.

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sympy/sympy/issues/7179"&gt;https://github.com/sympy/sympy/issues/7179&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sympy/sympy/issues/7180"&gt;https://github.com/sympy/sympy/issues/7180&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PR: &lt;a href="https://github.com/sympy/sympy/pull/7541"&gt;https://github.com/sympy/sympy/pull/7541&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
We have a public channel(&lt;https://gitter.im/sympy/sympy/optics&gt;) to
discuss about my project. You are welcome to join us, we would be more
than happy to get feedback about the work. It'll help us refine it and
cover a wider range of use cases.

&lt;/div&gt;

&lt;h4 id="weeklog" style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 18px; margin: 0px;"&gt;Weeklog&lt;/h4&gt;
&lt;h6 id="merged" style="color: #999999; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 11px; line-height: 18px; margin: 0px;"&gt;MERGED&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Add tests for pretty printer&lt;/li&gt;
&lt;li&gt;Remove unnecessary if block&lt;/li&gt;
&lt;li&gt;Add IPython Notebook Checkpoints to .gitignore&lt;/li&gt;
&lt;li&gt;Remove double wrapping with u&lt;/li&gt;
&lt;li&gt;Add tests for printing Equivalent. fixes #7180&lt;/li&gt;
&lt;li&gt;Wrap unicode chars with u and fix a bug in latex printer&lt;/li&gt;
&lt;li&gt;Fix a typo in manipulation.rst [skip ci]&lt;/li&gt;
&lt;li&gt;Make equivalence symbol same for pretty printer and * latex printer
    and change not equivalent symbol to u+2262 [skip ci]&lt;/li&gt;
&lt;li&gt;Fix latex printing for Not(Equivalent) and Not(Implies).&lt;/li&gt;
&lt;li&gt;Fix pretty printing for Not(Equivalent) and Not(Implies). fixes
    #7179&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id="pending" style="color: #999999; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 11px; line-height: 18px; margin: 0px;"&gt;PENDING&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Change arg to *args [skip ci]&lt;/li&gt;
&lt;li&gt;Add rewrite expression methods [skip ci]&lt;/li&gt;
&lt;li&gt;Add wavenumber property&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
This is all for now. Cheers!

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Mon, 02 Jun 2014 02:02:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2014-06-02:gsoc14-progress-finishing-twave</guid><category>gsoc</category><category>physics</category><category>sympy</category></item><item><title>GSoC 14: First Week</title><link>http://www.sudhanshumishra.in/gsoc-14-first-week</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div style="color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 1.3em; margin-bottom: 1.2em;"&gt;
The first week of GSoC is going to end very soon. I started working very
late this week because of some issues. I spent most of my time in
reading books on optics.

&lt;/div&gt;

&lt;div style="color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 1.3em; margin-bottom: 1.2em;"&gt;
Due to a dependency for 3D geometry, which will take some more time, I
changed my timeline from what I had proposed. Besides starting with
geometrical optics(3 weeks), I have started working on wave optics.

&lt;/div&gt;

&lt;div style="color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 1.3em; margin-bottom: 1.2em;"&gt;
This is what my proposal says:

&lt;/div&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;During this week I'll write code for classical wave equation and
    simple harmonic motion.&lt;/li&gt;
&lt;li&gt;Introduction of properties like phase angles, phase velocity, wave
    velocity, amplitude, intensity, frequency and wavelength. &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div style="color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 1.3em; margin-bottom: 1.2em;"&gt;
[This](https://github.com/sympy/sympy/pull/7518) is my first pull
request regarding my project (Thanks to Sean for the quick review). Till
now I've only added a transverse wave class and will add more to it in
the next 2 days.

&lt;/div&gt;

&lt;div style="color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 1.3em; margin-bottom: 1.2em;"&gt;
There were no hiccups yet!

&lt;/div&gt;

&lt;div style="color: #333333; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 1.3em; margin-bottom: 1.2em;"&gt;
&lt;span style="line-height: 1.3em;"&gt;Cheers!&lt;/span&gt;

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Sun, 25 May 2014 00:14:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2014-05-25:gsoc-14-first-week</guid><category>gsoc</category><category>physics</category><category>sympy</category></item><item><title>GSoC 2014 with SymPy</title><link>http://www.sudhanshumishra.in/gsoc-2014-with-sympy</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div style="text-align: left;"&gt;

My proposal is intended to add more to optics in SymPy. Till now it can
only do computations related to Gaussian optics and a bit of geometrical
optics. [Ondřej Čertík](https://github.com/certik) and [Sean
Vig](https://github.com/flacjacket) are my mentors for the project.

&lt;/div&gt;

&lt;div style="text-align: left;"&gt;

&lt;/div&gt;

&lt;div style="text-align: left;"&gt;
For those who don't know what is SymPy, SymPy is a Python library for
symbolic computation. It provides computer algebra capabilities either
as a standalone application, as a library to other applications, or live
on the web as SymPy Live. SymPy is trivial to install and to inspect
because is written entirely in Python and because it does not depend on
any additional libraries. This ease of access combined with a simple and
extensible code base in a well known language make SymPy a computer
algebra system with a relatively low barrier to entry. SymPy is free
software and is licensed under New BSD license. The lead developers are
Ondřej Čertík and Aaron Meurer.

&lt;/div&gt;

&lt;div style="text-align: left;"&gt;

&lt;/div&gt;

&lt;div style="text-align: left;"&gt;
Three more people other than me got selected for SymPy from my college,
namely, Akshay, Sachin Joglekar and Soumya Dipta Biswas.

&lt;/div&gt;

&lt;p&gt;During this &lt;em&gt;Community Bonding Period&lt;/em&gt;I'll try to get familiar with the
huge code base of SymPy and its community of developers. I'm also
working on few old pull requests that are dead for so long.  &lt;/p&gt;
&lt;p&gt;Looking forward to work with such a great organization! Thanks to Google
and SymPy for this opportunity!&lt;/p&gt;
&lt;p&gt;&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Fri, 25 Apr 2014 18:00:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2014-04-25:gsoc-2014-with-sympy</guid><category>gsoc</category><category>sympy</category></item><item><title>Managing commits and working with git diff</title><link>http://www.sudhanshumishra.in/managing-commits-and-working-with-git-diff</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div style="background-color: white; color: #333333; font-family: Helvetica, arial, freesans, clean, sans-serif; font-size: 15px; line-height: 25.5px; margin-bottom: 15px;"&gt;
**tl;dr**: This post assumes that you have basic knowledge of git. It's
just about managing commits and minimizing their numbers by having only
meaningful ones.

&lt;/div&gt;

&lt;div style="background-color: white; color: #333333; font-family: Helvetica, arial, freesans, clean, sans-serif; font-size: 15px; line-height: 25.5px; margin-bottom: 15px; margin-top: 15px;"&gt;
I've been working on a PR for around thirteen days which aims to fix a
bug related to mathematical assumptions for inverse trigonometric
functions in sympy. In order to do that I kept on committing changes
randomly and number of commits went on increasing. As of now sympy has
two types of mathematical assumptions we call it **new** and **old** so
genuinely there should have been only two commits referring changes to
respective types.

&lt;/div&gt;

&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;
&lt;div style="background-color: white; color: #333333; font-family: Helvetica, arial, freesans, clean, sans-serif; font-size: 15px; line-height: 25.5px; margin-bottom: 15px; margin-top: 15px;"&gt;
I had two
branches `master`{style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"} and `arctrigo`{style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"}.
I followed following steps to separate the changes done in both the
assumptions:

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;div style="margin-bottom: 15px; margin-top: 15px;"&gt;
    First pull the changes from the remote to
    your &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;master&lt;/code&gt; and
    merge it to your feature branch. In my case it
    was &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;arctrigo&lt;/code&gt;.
    &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div style="margin-bottom: 15px; margin-top: 15px;"&gt;
    Make sure that you are no your feature branch and not
    on &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;master&lt;/code&gt;.
    &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div style="margin-bottom: 15px; margin-top: 15px;"&gt;
    Create a diff with respect
    to &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;master&lt;/code&gt;. &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;git diff master &amp;gt; diff&lt;/code&gt;`
    (latter diff is just the filename, it could be anything)
    &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div style="margin-bottom: 15px; margin-top: 15px;"&gt;
    Create a new temporary branch
    of &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;master&lt;/code&gt;. &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;git checkout master; git branch -b tmp&lt;/code&gt;.
    &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div style="margin-bottom: 15px; margin-top: 15px;"&gt;
    Apply the patch
    . &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;git apply diff&lt;/code&gt;.
    &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div style="margin-bottom: 15px; margin-top: 15px;"&gt;
    Use &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;git add -p&lt;/code&gt; and
    you'll be prompted change by change as to whether that change should
    be staged for committal.
    Say &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;y&lt;/code&gt; to
    all changes involving one part
    and &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;n&lt;/code&gt; to
    the others.
    &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="background-color: white; color: #333333; font-family: Helvetica, arial, freesans, clean, sans-serif; font-size: 15px; line-height: 25.5px; margin-bottom: 15px; margin-top: 15px;"&gt;
Here git has staged a set of changes for your next commit command.

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;div style="margin-bottom: 15px; margin-top: 15px;"&gt;
    Commit the changes for the first part, for which you
    said &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;y&lt;/code&gt; in
    the prompts,
    by &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;git commit -m "your message for the first part"&lt;/code&gt;.
    &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div style="margin-bottom: 15px; margin-top: 15px;"&gt;
    And then
    do &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;git commit -am "your message for the other part"&lt;/code&gt; for
    which you
    said &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;n&lt;/code&gt; in
    the prompts.
    &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div style="margin-bottom: 15px; margin-top: 15px;"&gt;
    Delete your feature branch. In my case it
    was &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;arctrigo&lt;/code&gt; with &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;git branch -D arctrigo&lt;/code&gt;.
    &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div style="margin-bottom: 15px; margin-top: 15px;"&gt;
    Create the same feature branch
    from &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;tmp&lt;/code&gt; and
    switch to
    it. &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;git branch tmp; git checkout tmp&lt;/code&gt;.
    &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div style="margin-bottom: 15px; margin-top: 15px;"&gt;
    Update your PR
    with &lt;code style="background-color: #f8f8f8; border-bottom-left-radius: 3px; border-bottom-right-radius: 3px; border-top-left-radius: 3px; border-top-right-radius: 3px; border: 1px solid rgb(221, 221, 221); display: inline-block; font-family: Consolas, 'Liberation Mono', Courier, monospace; font-size: 12px; line-height: 1.3; margin: 0px; overflow: auto; padding: 0px; vertical-align: middle; white-space: nowrap;"&gt;git push -f &amp;lt;your_remote_name&amp;gt; &amp;lt;your_branch_name&amp;gt;&lt;/code&gt;.
    &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="background-color: white; color: #333333; font-family: Helvetica, arial, freesans, clean, sans-serif; font-size: 15px; line-height: 25.5px; margin-bottom: 15px; margin-top: 15px;"&gt;
Now navigate to your PR and you'll see two clean commits. I just learned
these things from [Christopher](https://github.com/smichr) and decided
to write a blog post about it.

&lt;/div&gt;

&lt;div style="background-color: white; color: #333333; font-family: Helvetica, arial, freesans, clean, sans-serif; font-size: 15px; line-height: 25.5px; margin-top: 15px;"&gt;
Cheers!

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Mon, 14 Apr 2014 13:48:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2014-04-14:managing-commits-and-working-with-git-diff</guid><category>git</category><category>github</category></item><item><title>Setting up Tornado server on Ubuntu 12.04</title><link>http://www.sudhanshumishra.in/setting-up-tornado-server-on-ubuntu-1204</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
 {#setting-up-tornado-server-on-ubuntu-12-04 style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 36px; margin: 0px;"}

&lt;div style="font-size: 13px; font-weight: normal; line-height: 18px; margin-bottom: 9px;"&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;
[![Tornado](http://www.tornadoweb.org/en/stable/_images/tornado.png)](http://www.tornadoweb.org/en/stable/_images/tornado.png)

&lt;/div&gt;

&lt;p&gt;Lately I was looking at Tornado which has been open sourced by Facebook.
It was originally developed at FriendFeed. It has a great capability to
handle tens of thousands on live connections at a time making it ideal
for &lt;br /&gt;
long polling, WebSockets, and other applications that require a
long-lived connection to each user. This server is written in Python
which follows a non blocking methodology of coding. Just like Node.js it
also works on a similar concept of callbacks.&lt;/p&gt;
&lt;p&gt;&lt;/div&gt;
&lt;/h1&gt;
&lt;span style="font-size: large;"&gt;Prerequisites&lt;/span&gt; {#setting-up-tornado-server-on-ubuntu-12-04 style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 36px; margin: 0px;"}
====================================================&lt;/p&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Tornado runs on Python 2.6, 2.7, 3.2, and 3.3. On Python 2, the
backports.ssl\_match\_hostname package must be installed (This will be
installed automatically when using pip or easy\_install); on Python 3
there are no strict dependencies outside the standard library. Some
Tornado features may require one of the following optional libraries:

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;div style="margin-bottom: 9px;"&gt;
    &lt;a href="https://pypi.python.org/pypi/unittest2"&gt;unittest2&lt;/a&gt; is needed to run
    Tornado’s test suite on Python 2.6 (it is unnecessary on more recent
    versions of Python)
    &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div style="margin-bottom: 9px;"&gt;
    &lt;a href="https://pypi.python.org/pypi/futures"&gt;concurrent.futures&lt;/a&gt; is the
    recommended thread pool for use with Tornado and enables the use
    of &lt;a href="http://www.tornadoweb.org/en/stable/netutil.html#tornado.netutil.ThreadedResolver"&gt;ThreadedResolver&lt;/a&gt;.
    It is needed only on Python 2; Python 3 includes this package in the
    standard library.
    &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div style="margin-bottom: 9px;"&gt;
    &lt;a href="http://pycurl.sourceforge.net/"&gt;pycurl&lt;/a&gt; is used by the optional
    tornado.curl_httpclient. Libcurl version 7.18.2 or higher is
    required; version 7.21.1 or higher is recommended.
    &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div style="margin-bottom: 9px;"&gt;
    &lt;a href="http://www.twistedmatrix.com/"&gt;Twisted&lt;/a&gt; may be used with the
    classes
    in &lt;a href="http://www.tornadoweb.org/en/stable/twisted.html#module-tornado.platform.twisted"&gt;tornado.platform.twisted&lt;/a&gt;.
    &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div style="margin-bottom: 9px;"&gt;
    &lt;a href="https://pypi.python.org/pypi/pycares"&gt;pycares&lt;/a&gt; is an alternative
    non-blocking DNS resolver that can be used when threads are not
    appropriate.
    &lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;div style="margin-bottom: 9px;"&gt;
    &lt;a href="https://pypi.python.org/pypi/Monotime"&gt;Monotime&lt;/a&gt; adds support for a
    monotonic clock, which improves reliability in environments where
    clock adjustments are frequent. No longer needed in Python 3.3.
    &lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Tornado works on almost all platforms including unix, BSD, Mac OS X and
windows though it is advised to use it only on Unix for production
purpose.

&lt;/div&gt;

&lt;h1 id="installation" style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 36px; margin: 0px;"&gt;&lt;span style="font-size: large;"&gt;Installation&lt;/span&gt;&lt;/h1&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Tornado is listed in [PyPi](https://pypi.python.org/pypi/tornado) so it
can be installed very easily with the following command:

&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install tornado
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
For backports it will automatically
install [backports.ssl\_match\_hostname](https://pypi.python.org/pypi/backports.ssl_match_hostname).

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
You can also install the latest development version from source code
using following command:

&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;sudo pip install https://github.com/facebook/tornado/zipball/master
&lt;/pre&gt;&lt;/div&gt;


&lt;h1 id="running-a-simple-program-using-tornado" style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 36px; margin: 0px;"&gt;&lt;span style="font-size: large;"&gt;Running a simple program using tornado&lt;/span&gt;&lt;/h1&gt;
&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Following is a simple hello world program using tornado.

&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tornado.httpserverimport&lt;/span&gt; &lt;span class="nn"&gt;tornado.ioloopimport&lt;/span&gt; &lt;span class="nn"&gt;tornado.optionsimport&lt;/span&gt; &lt;span class="nn"&gt;tornado.webfrom&lt;/span&gt; &lt;span class="nn"&gt;tornado.options&lt;/span&gt; &lt;span class="nn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;define&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;optionsdefine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;port&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8888&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;run on the given port&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, world&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;    &lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_command_line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;    &lt;span class="n"&gt;application&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;    &lt;span class="p"&gt;])&lt;/span&gt;    &lt;span class="n"&gt;http_server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;httpserver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTTPServer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="n"&gt;http_server&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ioloop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IOLoop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
The above written program will start the server on port 8888. You can
check it out by
visiting [http://www.yourdomain.com:8888](http://www.yourdomain.com:8888/).

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
I will write more on tornado in future. I'm planning to use this as
computing server for online version of [Binpy](http://www.binpy.org/).

&lt;/div&gt;

&lt;div style="color: #444444; font-family: Arvo, 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 13px; line-height: 18px; margin-bottom: 9px;"&gt;
Cheers!

&lt;/div&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Sat, 05 Apr 2014 06:42:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2014-04-05:setting-up-tornado-server-on-ubuntu-1204</guid><category>BinPy</category><category>Server</category><category>Ubuntu</category></item><item><title>BinPy: N Bit Ripple Counter</title><link>http://www.sudhanshumishra.in/binpy-n-bit-ripple-counter</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;div class="separator" style="clear: both; text-align: center;"&gt;
[![](http://binpy.github.io/images/logo.png)](http://binpy.github.io/images/logo.png)

&lt;/div&gt;

&lt;p&gt;&lt;a href="http://binpy.github.io"&gt;BinPy&lt;/a&gt; is almost ready to create things. This
post focuses on building a ripple counter using it.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Theory&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;A ripple counter is an asynchronous counter where only the first
flip-flop is clocked by an external clock. All subsequent flip-flops are
clocked by the output of the preceding flip-flop. Asynchronous counters
are also called ripple-counters because of the way the clock pulse
ripples it way through the flip-flops.  &lt;/p&gt;
&lt;p&gt;The MOD of the ripple counter or asynchronous counter is 2n if n
flip-flops are used. For a 4-bit counter, the range of the count is 0000
to 1111 (24-1). A counter may count up or count down or count up and
down depending on the input control. The count sequence usually repeats
itself. When counting up, the count sequence goes from 0000, 0001, 0010,
... 1110 , 1111 , 0000, 0001, ... etc. When counting down the count
sequence goes in the opposite manner: 1111, 1110, ... 0010, 0001, 0000,
1111, 1110, ... etc.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;The following code is using BinPy's internal NBitRippleCounter.  &lt;/p&gt;
&lt;p&gt;Following is the output of the above code.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Under the hood&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;When we are initializing the counter with specified number of bits, it
is actually creating those many T Flip Flops and connecting them in
order to get the result. The actual implementation is shown in the
following code.  &lt;/p&gt;
&lt;p&gt;Try connecting some wires with code, it's fun!&lt;br /&gt;
If you have some feedback or questions regarding this post, please add
comments. Cheers!   &lt;/p&gt;
&lt;p&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Thu, 13 Mar 2014 17:36:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2014-03-13:binpy-n-bit-ripple-counter</guid><category>BinPy</category><category>Circuit Design</category><category>Electronics</category></item><item><title>Why people love her?</title><link>http://www.sudhanshumishra.in/why-people-love-her</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
[![](http://www.python.org/community/logos/python-logo-master-v3-TM.png)](http://www.python.org/community/logos/python-logo-master-v3-TM.png)&lt;span style="color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px; line-height: 17.90625px;"&gt;There's
nothing wrong with falling in love with a programming language for her
looks. I mean, let's face it - Python does have a rockin' body of
modules, and a damn good set of utilities and interpreters on various
platforms. Her whitespace-sensitive syntax is easy on the eyes, and it's
a beautiful sight to wake up to in the morning after a long night of
debugging. The way she sways those releases on a consistent cycle - she
knows how to treat you right, you know?&lt;/span&gt;

&lt;span style="color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px; line-height: 17.90625px;"&gt;But
let's face it - a lot of other languages see the attention she's
getting, and they get jealous. Really jealous. They try and make her
feel bad by pointing out the GIL, and they try and convince her that
she's not "good enough" for parallel programming or enterprise-level
applications. They say that her lack of static typing gives her
programmers headaches, and that as an interpreted language, she's not
fast enough for performance-critical applications.&lt;/span&gt;  

&lt;span style="color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px; line-height: 17.90625px;"&gt;She
hears what those other, older languages like Java and C++ say, and she
thinks she's not stable or mature enough. She hears what those shallow,
beauty-obsessed languages like Ruby say, and she thinks she's not pretty
enough. But she's trying really hard, you know? She hits the gym every
day, trying to come up with new and better ways of JIT'ing and
optimizing. She's experimenting with new platforms and compilation
techniques all the time. She wants you to love her more, because she
cares.&lt;/span&gt;  

&lt;span style="color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px; line-height: 17.90625px;"&gt;But
then you hear about how bad she feels, and how hard she's trying, and
you just look into her eyes, sighing. You take Python out for a walk -
holding her hand - and tell her that she's the most beautiful language
in the world, but that's not the only reason you love her.&lt;/span&gt;  

&lt;span style="color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px; line-height: 17.90625px;"&gt;You
tell her she was raised right - Guido gave her core functionality and a
deep philosophy she's never forgotten. You tell her you appreciate her
consistent releases and her detailed and descriptive documentation. You
tell her that she has a great set of friends who are supportive and
understanding - friends like Google, Quora, and Facebook. And finally,
with tears in your eyes, you tell her that with her broad community
support, ease of development, and well-supported frameworks, you know
she's a language you want to be with for a long, long time.&lt;/span&gt;  

&lt;span style="color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px; line-height: 17.90625px;"&gt;After
saying all this, you look around and notice that the two of you are
alone. Letting go of Python's hand, you start to get down on one knee.
Her eyes get wide as you try and say the words - but she just puts her
finger on your lips and whispers, "Yes".&lt;/span&gt;  

&lt;span style="color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px; line-height: 17.90625px;"&gt;The
moon is bright. You know things are going to be okay now.&lt;/span&gt;

&lt;/div&gt;

&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Wed, 28 Aug 2013 22:46:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2013-08-28:why-people-love-her</guid></item><item><title>CapaStr: Talking about design</title><link>http://www.sudhanshumishra.in/capastr-talking-about-design</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
It was very difficult for me to choose the best and easiest framework to
use for UI design. After lot of research I decided to stick with
**JQueryMobile** since it has an awesome extension called
**ThemeRoller**.

Working with a framework gives you enough time to work on core things
rather than thinking about the responsive design. Cordova is doing
pretty well with JQuery without loosing any frame.  

Here's some of the screen shots of the
app&lt;span id="goog_1151724009"&gt;&lt;/span&gt;&lt;span id="goog_1151724010"&gt;&lt;/span&gt;  


&lt;div class="separator" style="clear: both; text-align: center;"&gt;
[![](http://2.bp.blogspot.com/-Ro8l1hwPdeY/UhPmv_VoK8I/AAAAAAAAAg8/h_G61THSzHo/s320/device-2013-08-21-032238.png)](http://2.bp.blogspot.com/-Ro8l1hwPdeY/UhPmv_VoK8I/AAAAAAAAAg8/h_G61THSzHo/s1600/device-2013-08-21-032238.png)

&lt;/div&gt;

&lt;div class="separator" style="clear: both; text-align: center;"&gt;
[![](http://3.bp.blogspot.com/-D6s37MvlMpI/UhPnnnEflOI/AAAAAAAAAhE/4tkIOQw1L58/s320/device-2013-08-21-031844.png)](http://3.bp.blogspot.com/-D6s37MvlMpI/UhPnnnEflOI/AAAAAAAAAhE/4tkIOQw1L58/s1600/device-2013-08-21-031844.png)

&lt;/div&gt;

&lt;p&gt;I'm not very good at choosing colors, although Blue and Orange are my
all time favorite.  &lt;/p&gt;
&lt;p&gt;Working with Android's push notification system is really a hectic job.
First you code for C2DM and then you get to know that it has been
deprecated by Google itself discourages the development. Google
introduced something new called Google Cloud Messaging(GCM). This works
pretty smooth once you have the registration Id of the device. Thanks
to &lt;a href="http://namis.me/"&gt;geeknam&lt;/a&gt; for proving such a fantastic library to
handle GCM with Python.&lt;br /&gt;
I hope that Apple Push Notification Service(APNS) would not be a
headache like Android. &lt;br /&gt;
I'll let you know about further development soon.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Enjoy!!&lt;/em&gt;&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;span style="font-size: xx-small;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;/div&gt;
&lt;/p&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Tue, 20 Aug 2013 22:37:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2013-08-20:capastr-talking-about-design</guid><category>Android</category><category>CapaStr</category><category>Cordova</category><category>iOS</category><category>JQueryMobile</category><category>PhoneGap</category></item><item><title>Customize your Google Search</title><link>http://www.sudhanshumishra.in/customize-your-google-search</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
1.

    &gt; 1.  **Either/or**  
   &gt;     Google normally searches for pages that contain all the words
    &gt;     you type in the search box, but if you want pages that have
    &gt;     one term or another (or both), use the OR operator -- or use
    &gt;     the "|" symbol (pipe symbol) to save you a keystroke.
    &gt;     &lt;span class="qlink_container"&gt;[dumb | little |
    &gt;     man](https://www.google.com/search?q=dumb+%7C+little+%7C+man&amp;oq=dumb+%7C+little+%7C+man&amp;aqs=chrome.0.69i57j5j0l2j69i62l2.338j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1)&lt;/span&gt;
    &gt; 2.  **Quotes**  
   &gt;     If you want to search for an exact phrase, use quotes.
    &gt;     &lt;span class="qlink_container"&gt;["dumb little
    &gt;     man"](https://www.google.com/search?q=%22dumb+little+man%22&amp;oq=%22dumb+little+man%22&amp;aqs=chrome.0.69i57j69i62.347j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1)&lt;/span&gt;
    &gt;     will only find that exact phrase. 
    &gt;     &lt;span class="qlink_container"&gt;[dumb "little
    &gt;     man"](https://www.google.com/search?q=dumb+%22little+man%22&amp;oq=dumb+%22little+man%22&amp;aqs=chrome.0.69i57j0l3j69i62.275j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1)&lt;/span&gt;
    &gt;     will find pages that contain the word dumb and the exact
    &gt;     phrase "little man".
    &gt; 3.  **Not**  
   &gt;     If you don't want a term or phrase, use the "-" symbol.
    &gt;     &lt;span class="qlink_container"&gt;[-dumb little
    &gt;     man](https://www.google.com/search?q=-dumb+little+man&amp;oq=-dumb+little+man&amp;aqs=chrome.0.69i57j69i62l3.553j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1)&lt;/span&gt;
    &gt;     will return pages that contain "little" and "man" but that
    &gt;     don't contain "dumb".
    &gt; 4.  **Similar terms**  
   &gt;     Use the "\~" symbol to return similar terms.
    &gt;     &lt;span class="qlink_container"&gt;[\~dumb little man
    &gt;     -dumb](https://www.google.com/search?q=%7Edumb+little+man+-dumb%5D&amp;oq=%7Edumb+little+man+-dumb%5D&amp;aqs=chrome.0.69i57j69i62l3.674j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1#bav=on.2,or.r_cp.r_qf.&amp;fp=ed6cd8ec55b9affb&amp;q=%7Edumb+little+man+-dumb&amp;qscrl=1)&lt;/span&gt;
    &gt;     will get you pages that contain "funny little man" and "stupid
    &gt;     little man" but not "dumb little man". Note: It looks like
    &gt;     this feature may have been turned off. Good idea though!
    &gt; 5.  **Wildcard**  
   &gt;     The "\*" symbol is a wildcard. This is useful if you're trying
    &gt;     to find the lyrics to a song, but can't remember the exact
    &gt;     lyrics. &lt;span class="qlink_container"&gt;[can't \* me love
    &gt;     lyrics](https://www.google.com/search?q=can%27t+*+me+love+lyrics&amp;oq=can%27t+*+me+love+lyrics&amp;aqs=chrome.0.69i57j0l3j69i62.450j0&amp;sourceid=chrome&amp;ie=UTF-8)&lt;/span&gt;
    &gt;     will return the Beatles song you're looking for. It's also
    &gt;     useful for finding stuff only in certain domains, such as
    &gt;     educational information: &lt;span class="qlink_container"&gt;[cats
    &gt;     \*.edu](https://www.google.com/search?q=cats+*.edu&amp;oq=cats+*.edu&amp;aqs=chrome.0.69i57j5j0l2.6906j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1)&lt;/span&gt;
    &gt; 6.  **Advanced search**  
   &gt;     If you can't remember any of these operators, you can always
    &gt;     use &lt;span class="qlink_container"&gt;[Google's Advanced
    &gt;     Search](http://www.google.com/advanced_search)&lt;/span&gt;.
    &gt; 7.  **Definitions**  
   &gt;     Use the "define:" operator to get a quick definition.
    &gt;     &lt;span class="qlink_container"&gt;[define:dumb](https://www.google.com/search?q=define%3Adumb&amp;oq=define%3Adumb&amp;aqs=chrome.0.69i57j69i58j69i62.375j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1)&lt;/span&gt;
    &gt;     will give you a whole host of definitions from different
    &gt;     sources, with links.
    &gt; 8.  **Calculator**  
   &gt;     One of the handiest uses of Google, type in a quick
    &gt;     calculation in the search box and get an answer. It's faster
    &gt;     than calling up your computer's calculator in most cases. Use
    &gt;     the +, -, \*, / symbols and parentheses to do a simple
    &gt;     equation. &lt;span class="qlink_container"&gt;[(3 4/5 + 2 1/8)-(1
    &gt;     1/12)\*2](https://www.google.com/search?q=%283+4%2F5+%2B+2+1%2F8%29-%281+1%2F12%29*2&amp;oq=%283+4%2F5+%2B+2+1%2F8%29-%281+1%2F12%29*2&amp;aqs=chrome.0.69i57j0j69i62l3.27860j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1)&lt;/span&gt;
    &gt; 9.  **Numrange**  
   &gt;     This little-known feature searches for a range of numbers. For
    &gt;     example, &lt;span class="qlink_container"&gt;[best books
    &gt;     2002..2007](https://www.google.com/search?q=best+books+2002..2007&amp;oq=best+books+2002..2007&amp;aqs=chrome.0.69i57j69i62l3j69i64.226j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1)&lt;/span&gt;
    &gt;     will return lists of best books for each of the years from
    &gt;     2002 to 2007 (note the two periods between the two numbers).
    &gt; 10. **Site-specific**  
   &gt;     Use the "site:" operator to search only within a certain
    &gt;     website. &lt;span class="qlink_container"&gt;[site:dumblittleman.com
    &gt;     leo](https://www.google.com/search?q=site%3Adumblittleman.com+leo&amp;oq=site%3Adumblittleman.com+leo&amp;aqs=chrome.0.69i57j69i58.466j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1)&lt;/span&gt;
    &gt;     will search for the term "leo" only within this blog.
    &gt; 11. **Backlinks**  
   &gt;     The "link:" operator will find pages that link to a specific
    &gt;     URL. You can use this not only for a main URL but even to a
    &gt;     specific page. Not all links to an URL are listed, however.
    &gt;     &lt;span class="qlink_container"&gt;[link:dumblittleman.com](https://www.google.com/search?q=link%3Adumblittleman.com&amp;oq=link%3Adumblittleman.com&amp;aqs=chrome.0.69i57j69i58.321j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1)&lt;/span&gt;
    &gt; 12. **Vertical search**  
   &gt;     Instead of searching for a term across all pages on the web,
    &gt;     search within a specialized field. Google has a number of
    &gt;     specific searches, allowing you to search within blogs, news,
    &gt;     books, and much more:  
   &gt;     -   &lt;span class="qlink_container"&gt;[**&lt;u&gt;Blog
    &gt;         Search&lt;/u&gt;**](http://blogsearch.google.com/)&lt;/span&gt;
    &gt;     -   &lt;span class="qlink_container"&gt;[**&lt;u&gt;Book
    &gt;         Search&lt;/u&gt;**](http://books.google.com/)&lt;/span&gt;
    &gt;     -   &lt;span class="qlink_container"&gt;[**&lt;u&gt;Scholar&lt;/u&gt;**](http://scholar.google.com/)&lt;/span&gt;
    &gt;     -   &lt;span class="qlink_container"&gt;[**&lt;u&gt;Catalogs&lt;/u&gt;**](http://catalogs.google.com/)&lt;/span&gt;
    &gt;     -   &lt;span class="qlink_container"&gt;[**&lt;u&gt;Code
    &gt;         Search&lt;/u&gt;**](http://www.google.com/codesearch)&lt;/span&gt;
    &gt;     -   &lt;span class="qlink_container"&gt;[**&lt;u&gt;Directory&lt;/u&gt;**](http://www.google.com/dirhp)&lt;/span&gt;
    &gt;     -   &lt;span class="qlink_container"&gt;[**&lt;u&gt;Finance&lt;/u&gt;**](http://finance.google.com/finance)&lt;/span&gt;
    &gt;     -   &lt;span class="qlink_container"&gt;[**&lt;u&gt;Images&lt;/u&gt;**](http://images.google.com/)&lt;/span&gt;
    &gt;     -   &lt;span class="qlink_container"&gt;[**&lt;u&gt;Local/Maps&lt;/u&gt;**](http://maps.google.com/maps)&lt;/span&gt;
    &gt;     -   &lt;span class="qlink_container"&gt;[**&lt;u&gt;News&lt;/u&gt;**](http://news.google.com/)&lt;/span&gt;
    &gt;     -   &lt;span class="qlink_container"&gt;[**&lt;u&gt;Patent
    &gt;         Search&lt;/u&gt;**](http://www.google.com/patents)&lt;/span&gt;
    &gt;     -   &lt;span class="qlink_container"&gt;[**&lt;u&gt;Product
    &gt;         Search&lt;/u&gt;**](http://www.google.com/products)&lt;/span&gt;
    &gt;     -   &lt;span class="qlink_container"&gt;[**&lt;u&gt;Video&lt;/u&gt;**](http://video.google.com/)&lt;/span&gt;
    &gt;
    &gt; 13. **Local Search**  
   &gt;     Search for anything in your city. Examples
    &gt;     &lt;span class="qlink_container"&gt;[movies
    &gt;     94705](https://www.google.com/search?q=movies+94705&amp;btnG=Search&amp;qscrl=1)&lt;/span&gt;,
    &gt;     &lt;span class="qlink_container"&gt;[Italian food
    &gt;     02138](https://www.google.com/search?q=Italian+food+02138&amp;btnG=Search&amp;qscrl=1)&lt;/span&gt;
    &gt; 14. **Weather**  
   &gt;     To see the weather for many U.S. and worldwide cities, type
    &gt;     “weather” followed by the city and state, U.S. zip code, or
    &gt;     city and country. &lt;span class="qlink_container"&gt;[weather San
    &gt;     Francisco,
    &gt;     CA](https://www.google.com/search?q=weather+San+Francisco%2C+CA&amp;btnG=Search&amp;qscrl=1)&lt;/span&gt;
    &gt; 15. **Unit converter**  
   &gt;     Use Google for a quick conversion, from yards to meters for
    &gt;     example, or different currency:
    &gt;     &lt;span class="qlink_container"&gt;[12 meters in
    &gt;     yards](https://www.google.com/search?q=12+meters+in+yards&amp;oq=12+meters+in+yards&amp;aqs=chrome.0.69i57j0j69i62.441j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1)&lt;/span&gt;
    &gt; 16. **Types of numbers**  
   &gt;     Google algorithms can recognize patterns in numbers you enter,
    &gt;     so you can search for:  
   &gt;     -   Telephone area codes
    &gt;     -   Vehicle ID number (US only)
    &gt;     -   Federal Communications Commission (FCC) equipment numbers
    &gt;         (US only)
    &gt;     -   UPC codes
    &gt;     -   Federal Aviation Administration (FAA) airplane
    &gt;         registration number (US only)
    &gt;     -   Patent numbers (US only). Example
    &gt;         &lt;span class="qlink_container"&gt;[Patent
    &gt;         5123123](https://www.google.com/search?q=Patent+5123123&amp;btnG=Search&amp;qscrl=1)&lt;/span&gt;
    &gt;     -   Even stock quotes (using the stock symbol) or a weather
    &gt;         forecast regarding the next five days
    &gt;     -   Package Tracking (UPS, Fedex, or USPS). Example:
    &gt;         &lt;span class="qlink_container"&gt;[1Z9999W99999999999](https://www.google.com/search?q=1Z9999W99999999999&amp;btnG=Search&amp;qscrl=1)&lt;/span&gt;
    &gt;
    &gt; 17. **File types**  
   &gt;     If you just want to search for .PDF files, or Word documents,
    &gt;     or Excel spreadsheets, for example, use the "filetype:"
    &gt;     operator. &lt;span class="qlink_container"&gt;[cats
    &gt;     filetype:pdf](https://www.google.com/search?q=cats+filetype%3Apdf&amp;oq=cats+filetype%3Apdf&amp;aqs=chrome.0.69i57.9169j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1)&lt;/span&gt;
    &gt; 18. **Location of term**  
   &gt;     By default, Google searches for your term throughout a web
    &gt;     page. But if you just want it to search certain locations, you
    &gt;     can use operators such as "inurl:", "intitle:", "intext:", and
    &gt;     "inanchor:". Those search for a term only within the URL, the
    &gt;     title, the body text, and the anchor text (the text used to
    &gt;     describe a link).
    &gt;     &lt;span class="qlink_container"&gt;[inurl:funny](https://www.google.com/search?q=inurl%3Afunny&amp;oq=inurl%3Afunny&amp;aqs=chrome.0.69i57j69i58.3481j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1)&lt;/span&gt;
    &gt; 19. **Related search**  
   &gt;     To search for web pages that have similar content to a given
    &gt;     site, type “related:” followed by the website address into the
    &gt;     Google search box.
    &gt;     &lt;span class="qlink_container"&gt;[related:www.cnn.com](https://www.google.com/search?q=related%3Awww.cnn.com&amp;btnG=Search&amp;qscrl=1)&lt;/span&gt;
    &gt; 20. &lt;span class="qlink_container"&gt;[**answer to life the universe
    &gt;     and
    &gt;     everything**](https://www.google.com/search?q=answer+to+life+the+universe+and+everything&amp;oq=answer&amp;aqs=chrome.1.69i57j69i59j69i61j5j0j69i60.6362j0&amp;sourceid=chrome&amp;ie=UTF-8&amp;qscrl=1)&lt;/span&gt;  
   &gt;     Search for that phrase, in lower case, and Google will give
    &gt;     you the answer!



&lt;/div&gt;

&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Sat, 10 Aug 2013 23:24:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2013-08-10:customize-your-google-search</guid><category>Google</category><category>Tricks</category><category>Web</category></item><item><title>Linux and Lenovo Essential G580</title><link>http://www.sudhanshumishra.in/linux-and-lenovo-essential-g580</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;span href="http://mrsud.quora.com/#" id="__w2_ciPHhLi_toggle_link"&gt;&lt;span id="ld_nrrkyA_12168"&gt;&lt;span id="ld_kWHjoX_11820"&gt;&lt;span class="inline_editor_value"&gt;Lenovo
Essential G580 is the laptop which has highest number of conflicts with
aLinux OS. The biggest problem is when you install a Linux OS you will
**lose access to your BIOS setup** and that's permanent. I faced this
problem and I sent my laptop to service center to repair and they had to
change its motherboard to fix this problem. When my laptop returned
after repairing I installed Ubuntu 12.10 and lost my BIOS once again!
:(  
Now I am using only Ubuntu 12.10 and not windows and that too without
BIOS even if it's under warranty.

Now when the Ubuntu is installed, be prepared to face challenges! Ubuntu
is supposed to carry each and every driver with it but unfortunately it
doesn't have the wired network driver for this laptop. After searching
over the internet for hours I finally installed my network driver and
uploaded the installer to Google drive for future.  
I solved one more issue of uncontrollable brightness of the screen by
editing grub. Bluetooth automatically gets activated sometimes.  
There are uncountable number of problems. The only thing which you can
do is to prevent yourself from buying this
laptop.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;

&lt;/div&gt;

&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Sat, 10 Aug 2013 23:10:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2013-08-10:linux-and-lenovo-essential-g580</guid><category>BIOS</category><category>Lenovo</category><category>Lenovo G580</category><category>Linux</category><category>Ubuntu</category></item><item><title>Some Ideas</title><link>http://www.sudhanshumishra.in/some-ideas</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
&lt;span style="background-color: white; color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px;"&gt;There
are several basic things where computer vision can be applied to make
things easier by increasing automation.&lt;/span&gt;  
&lt;span style="background-color: white; color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px;"&gt;Some
fields which I can figure out are:&lt;/span&gt;

&lt;span style="background-color: white; color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px;"&gt;    &lt;/span&gt;**1.**&lt;span style="background-color: white; color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px;"&gt; Collecting
data from CCTVs installed in public places and making some sense out of
it by finding patterns and activities that people usually do to generate
some revenue or making use of that data for development of the
country.&lt;/span&gt;  
&lt;span style="background-color: white; color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px;"&gt;   
This is only possible by mastering BigData and computer vision. &lt;/span&gt;  
&lt;span style="background-color: white; color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px;"&gt;    &lt;/span&gt;  
**   
2.**&lt;span style="background-color: white; color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px;"&gt; Detecting
presence of people in a room to save electricity and switching
appliances on/off by observing their gesture and speech.&lt;/span&gt;  
&lt;span style="background-color: white; color: #333333; font-family: 'Helvetica Neue', Arial, sans-serif; font-size: 13px;"&gt;      
Later on it can be converted into a device for people.&lt;/span&gt;  

&lt;/div&gt;

&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Fri, 19 Apr 2013 21:07:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2013-04-19:some-ideas</guid></item><item><title>Strings in C</title><link>http://www.sudhanshumishra.in/strings-in-c</link><description>&lt;div dir="ltr" style="text-align: left;"&gt;
### **Yes, there is a way to handle strings without any loop in C.** {style="text-align: left;"}

Playing with arrays is the most enjoying work which programmers do.
These arrays are the most powerful tool which has been invented for
programming.  

Modern languages handle these arrays pretty well but if we talk about
arrays in C, it would be a bit tricky.  
Just because C lacks in handling strings, arrays prove to be more
important in C.  

Strings are treated to be a collection of characters in C. We can store
a bunch of characters in an array and display them altogether to
represent a string.  

To do this follow these steps:  

&lt;span style="color: blue;"&gt;char&lt;/span&gt;
&lt;span style="color: #b45f06;"&gt;myString[100]&lt;/span&gt;;  
    This defines a character array of size 100.  
    Size 100 means it can store 100 characters in it or simply a string
of length 100.  

Now we have to take input of the string from user. we'll use **fgets()**
function to take input.  

&lt;span style="color: blue;"&gt;fgets&lt;/span&gt;&lt;span style="color: #b45f06;"&gt;(myString)&lt;/span&gt;;  

    **Note:** fgets() can take input of infinite length.  

To print the string taken from the user we can either use **printf()**
or **puts()**.  

&lt;span style="color: blue;"&gt;printf&lt;/span&gt;&lt;span style="color: #b45f06;"&gt;("%s",myString)&lt;/span&gt;;  

or just  
&lt;span style="color: blue;"&gt;  
&lt;/span&gt;&lt;span style="color: blue;"&gt;puts&lt;/span&gt;&lt;span style="color: #b45f06;"&gt;(myString);&lt;/span&gt;  


Example:  

INPUT: &lt;span style="color: #38761d;"&gt;So I am breaking the habit
tonight.&lt;/span&gt;  

OUTPUT : &lt;span style="color: #38761d;"&gt;So I am breaking the habit
tonight.&lt;/span&gt;

&lt;/div&gt;

&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sudhanshu Mishra (noreply@blogger.com)</dc:creator><pubDate>Mon, 04 Mar 2013 23:53:00 +0530</pubDate><guid>tag:www.sudhanshumishra.in,2013-03-04:strings-in-c</guid></item></channel></rss>